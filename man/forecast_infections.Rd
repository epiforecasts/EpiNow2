% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/forecast_infections.R
\name{forecast_infections}
\alias{forecast_infections}
\title{Estimate Infections and the Time-Varying Reproduction Number}
\usage{
forecast_infections(
  infections,
  rts,
  gt_mean,
  gt_sd,
  ensemble_type = "mean",
  forecast_model,
  horizon = 14,
  samples = 1000
)
}
\arguments{
\item{infections}{A data frame of cases by date of infection containing the following variables: date, mean, sd}

\item{rts}{A data frame of Rt estimates by date of infection containing the following variables: date, mean, sd}

\item{ensemble_type}{Character string indicating the type of ensemble to use. By default this is
an unweighted ensemble ("mean") with no other types currently supported.}

\item{forecast_model}{An uninitialised forecast model function to be passed to \code{EpiSoon::forecast_rt}. Used
for forecasting future Rt and case co An example of the required structure is: \code{function(ss, y){bsts::AddSemilocalLinearTrend(ss, y = y)}}.}

\item{horizon}{Numeric, defaults to 14. The horizon over which to forecast Rts and cases.}

\item{samples}{Numeric, the number of forecast samples to take.}
}
\value{
A list of \code{data.tables}. The first entry ("samples") contains raw forecast samples and the second entry ("summarised") contains
summarised forecasts.
}
\description{
Estimate Infections and the Time-Varying Reproduction Number
}
\examples{
\dontrun{
library(EpiSoon)
library(forecastHybrid)

reported_cases <- NCoVUtils::get_ecdc_cases(countries = "Russia")
reported_cases <- NCoVUtils::format_ecdc_data(reported_cases)
reported_cases <- data.table::as.data.table(reported_cases)[, confirm := cases][, cases := NULL][1:90]
 
generation_time <- list(mean = EpiNow2::covid_generation_times_summary[1, ]$mean,
                        mean_sd = EpiNow2::covid_generation_times_summary[1, ]$mean_sd,
                        sd = EpiNow2::covid_generation_times_summary[1, ]$sd,
                        sd_sd = EpiNow2::covid_generation_times_summary[1, ]$sd_sd,
                        max = 30)
                          
incubation_period <- list(mean = EpiNow2::covid_incubation_period[1, ]$mean,
                          mean_sd = EpiNow2::covid_incubation_period[1, ]$mean_sd,
                          sd = EpiNow2::covid_incubation_period[1, ]$sd,
                          sd_sd = EpiNow2::covid_incubation_period[1, ]$sd_sd,
                          max = 30)
                   
reporting_delay <- list(mean = log(5),
                        mean_sd = log(2),
                        sd = log(2),
                        sd_sd = log(1.5),
                        max = 30)
                        
rt_prior <- list(mean = 2.6, sd = 2)
  

## Run model
out <- estimate_infections(reported_cases, family = "negbin",
                           generation_time = generation_time,
                           incubation_period = incubation_period,
                           reporting_delay = reporting_delay,
                           rt_prior = rt_prior,
                           model = model,
                           cores = 4, chains = 4,
                           estimate_rt = TRUE,
                           verbose = TRUE, return_fit = TRUE)


forecast <- forecast_infections(infections = out$summarised[variable == "infections"],
                                rts = out$summarised[variable == "R"],
                                gt_mean = out$summarised[variable == "gt_mean"]$mean,
                                gt_sd = out$summarised[variable == "gt_sd"]$mean,
                                forecast_model = function(y, ...){
                                EpiSoon::forecastHybrid_model(y = y[max(1, length(y) - 21):length(y)],
                                model_params = list(models = "aefz", weights = "equal"),
                                forecast_params = list(PI.combination = "mean"), ...)},
                                horizon = 14, 
                                samples = 1000)
                                
forecast
}                              
}
