% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_infections.R
\name{simulate_infections}
\alias{simulate_infections}
\title{Simulate infections using a given trajectory of the time-varying reproduction number}
\usage{
simulate_infections(estimates, R = NULL, model = NULL, verbose = interactive())
}
\arguments{
\item{estimates}{The \code{estimates} element of an \code{epinow} run that has been done with output = "fit", or the result of \code{estimate_infections} with \code{return_fit} set to TRUE.}

\item{R}{A numeric vector of reproduction numbers; these will overwrite the reproduction numbers contained in \code{estimates}, except elements set to NA. If it is longer than the time series of reproduction numbers contained in \code{estimates}, the values going beyond the length of estimated reproduction numbers are taken as forecast.}

\item{model}{A compiled stan model. By default uses the internal package model.}

\item{verbose}{Logical, defaults to \code{TRUE} when used interactively and otherwise \code{FALSE}. Should verbose debug progress messages be printed. Corresponds to the "DEBUG" level from
\code{futile.logger}. See \code{setup_logging} for more detailed logging options.}
}
\description{
This function simulates infections using an existing fit to observed cases but with a modified time-varying reproduction number. This can be used to explore forecast models or past counterfactuals.
}
\examples{
\donttest{
# get example case counts
reported_cases <- EpiNow2::example_confirmed[1:50]

# set up example generation time
generation_time <- get_generation_time(disease = "SARS-CoV-2", source = "ganyani")
# set delays between infection and case report
incubation_period <- get_incubation_period(disease = "SARS-CoV-2", source = "lauer")
reporting_delay <- list(mean = log(3), mean_sd = 0.1,
                        sd = log(1), sd_sd = 0.1, max = 15)
                        
# fit model to data to recover Rt estimates
est <- estimate_infections(reported_cases, generation_time = generation_time,
                           delays = list(incubation_period, reporting_delay),
                           stan_args = 
                             list(warmup = 200, 
                                  control = list(adapt_delta = 0.95, max_treedepth = 15),
                                  cores = ifelse(interactive(), 4, 1)))
                                  
# update Rt trajectory and simulate new infections using it
R <- c(rep(NA_real_, 40), rep(0.5, 17))
sims <- simulate_infections(est, R)
plot(sims)
}
}
