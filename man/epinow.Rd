% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/epinow.R
\name{epinow}
\alias{epinow}
\title{Real-time Rt Estimation, Forecasting and Reporting}
\usage{
epinow(
  reported_cases,
  family = "negbin",
  generation_time = generation_time,
  incubation_period = incubation_period,
  reporting_delay = reporting_delay,
  rt_prior = rt_prior,
  model = model,
  cores = 2,
  chains = 2,
  samples = 2000,
  warmup = 500,
  estimate_rt = TRUE,
  return_fit = FALSE,
  forecast_model,
  horizon = 14,
  ensemble_type = "mean",
  return_estimates = TRUE,
  target_folder,
  target_date,
  verbose = FALSE
)
}
\arguments{
\item{reported_cases}{A data frame of confirmed cases (confirm) by date (date).}

\item{family}{A character string indicating the reporting model to use. Defaults to negative
binomial ("negbin") with poisson ("poisson") also supported.}

\item{generation_time}{A list containing the mean, standard deviation of the mean (mean_sd),
standard deviation (sd), standard deviation of the standard deviation and the maximum allowed value for the
generation time (assuming a gamma distribution).}

\item{incubation_period}{A list containing the mean, standard deviation of the mean (mean_sd),
standard deviation (sd), standard deviation of the standard deviation and the maximum allowed value for the
incubation period (assuming a lognormal distribution with all parameters excepting the max allowed value
on the log scale).}

\item{reporting_delay}{A list containing the mean, standard deviation of the mean (mean_sd),
standard deviation (sd), standard deviation of the standard deviation and the maximum allowed value for the
reporting delay (assuming a lognormal distribution with all parameters excepting the max allowed value
on the log scale).}

\item{rt_prior}{A list contain the mean and standard deviation (sd) of the gamma distributed prior for
Rt. By default this is assumed to be mean 1 with a standard deviation of 1.}

\item{model}{A compiled stan model. By default uses the internal package model.}

\item{cores}{Numeric, defaults to 2. The number of cores to use when fitting the stan model.}

\item{chains}{Numeric, defaults to 2. The number of MCMC chains to use.}

\item{samples}{Numeric, defaults to 1000. Number of samples post warmup.}

\item{warmup}{Numeric, defaults to 500. Number of iteration of warmup to use.}

\item{estimate_rt}{Logical, defaults TRUE. Should Rt be estimated when imputing infections.}

\item{return_fit}{Logical, defaults to FALSE. Should the fitted stan model be returned.}

\item{forecast_model}{An uninitialised forecast model function to be passed to \code{EpiSoon::forecast_rt}. Used
for forecasting future Rt and case co An example of the required structure is: \code{function(ss, y){bsts::AddSemilocalLinearTrend(ss, y = y)}}.}

\item{horizon}{Numeric, defaults to 14. Number of days into the future to forecast.}

\item{ensemble_type}{Character string indicating the type of ensemble to use. By default this is
an unweighted ensemble ("mean") with no other types currently supported.}

\item{return_estimates}{Logical, defaults to TRUE. Should estimates be returned.}

\item{target_folder}{Character string specifying where to save results (will create if not present).}

\item{target_date}{Date, defaults to maximum found in the data if not specified.}

\item{verbose}{Logical, defaults to FALSE. Should verbose progress messages be printed.}
}
\value{
A list of output from estimate_infections, forecast_infections,  report_cases, and report_summary.
}
\description{
Estimate Rt and cases by date of infection, forecast into the future, transform to date
of report and then save summary measures and plots.
}
\examples{
\dontrun{
## optional additional packages:
## remove forecast_model argument to no longer require these
library(EpiSoon)
library(forecastHybrid)

## Construct example distributions
generation_time <- list(mean = EpiNow2::covid_generation_times[1, ]$mean,
                        mean_sd = EpiNow2::covid_generation_times[1, ]$mean_sd,
                        sd = EpiNow2::covid_generation_times[1, ]$sd,
                        sd_sd = EpiNow2::covid_generation_times[1, ]$sd_sd,
                        max = 30)
                          
incubation_period <- list(mean = EpiNow2::covid_incubation_period[1, ]$mean,
                          mean_sd = EpiNow2::covid_incubation_period[1, ]$mean_sd,
                          sd = EpiNow2::covid_incubation_period[1, ]$sd,
                          sd_sd = EpiNow2::covid_incubation_period[1, ]$sd_sd,
                          max = 30)
                   
reporting_delay <- EpiNow2::bootstrapped_dist_fit(rlnorm(100, log(6), 1))
## Set max allowed delay to 60 days to truncate computation
reporting_delay$max <- 60

## Uses example case vector from EpiSoon
cases <- data.table::setDT(EpiSoon::example_obs_cases)
cases <- cases[, confirm := as.integer(cases)][,cases := NULL][1:40]

## Report Rt along with forecasts
out <- epinow(reported_cases = cases, generation_time = generation_time,
              incubation_period = incubation_period, reporting_delay = reporting_delay,
              rt_prior = list(mean = 1, sd = 1),
              forecast_model = function(y, ...){
                   EpiSoon::forecastHybrid_model(
                     y = y[max(1, length(y) - 21):length(y)],
                     model_params = list(models = "aefz", weights = "equal"),
                     forecast_params = list(PI.combination = "mean"), ...)},
               samples = 1000, warmup = 500, cores = 2, chains = 2,
               verbose = TRUE, return_fit = TRUE)

out
}
}
