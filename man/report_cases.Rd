% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/report.R
\name{report_cases}
\alias{report_cases}
\title{Report case counts by date of report}
\usage{
report_cases(
  nowcast,
  case_forecast = NULL,
  delay_defs,
  incubation_defs,
  type = "median",
  reporting_effect
)
}
\arguments{
\item{nowcast}{A dataframe as produced by \code{nowcast_pipeline}}

\item{case_forecast}{A data.table of case forecasts as produced by \code{epi_measures_pipeline} If not supplied the
default is not incoperate forecasts.}

\item{delay_defs}{A data.table that defines the delay distributions (model, parameters and maximum delay for each model).
See \code{get_delay_dist} for an example of the structure.}

\item{incubation_defs}{A data.table that defines the incubation distributions (model, parameters and maximum delay for each model).
See \code{get_delay_dist} for an example of the structure.}

\item{type}{Character string indicating the method to use to transfrom counts. Supports either "sample"
which approximates sampling or "median" would shift by the median of the distribution.}

\item{reporting_effect}{A \code{data.table} giving the weekly reporting effect with the following variables:
\code{sample} (must be the same as in \code{nowcast}), \code{effect} (numeric scaling factor for each weekday), \code{day}
(numeric 1 - 7 (1 = Monday and 7 = Sunday)). If not supplied then no weekly reporting effect is assumed.}
}
\value{
A \code{data.table} containing the following variables \code{sample}, \code{date} and \code{cases}
}
\description{
Report case counts by date of report
}
\examples{

## Define example cases
cases <- data.table::as.data.table(EpiSoon::example_obs_cases) 

cases <- cases[, `:=`(confirm = as.integer(cases), import_status = "local")]

## Define a single report delay distribution
delay_defs <- EpiNow::lognorm_dist_def(mean = 5, 
                                       mean_sd = 1,
                                       sd = 3,
                                       sd_sd = 1,
                                       max_value = 30,
                                       samples = 2)
                                       
## Define a single incubation period
incubation_defs <- EpiNow::lognorm_dist_def(mean = EpiNow::covid_incubation_period[1, ]$mean,
                                            mean_sd = EpiNow::covid_incubation_period[1, ]$mean_sd,
                                            sd = EpiNow::covid_incubation_period[1, ]$sd,
                                            sd_sd = EpiNow::covid_incubation_period[1, ]$sd_sd,
                                            max_value = 30, samples = 2)
                                           

## Perform a nowcast
nowcast <- nowcast_pipeline(reported_cases = cases, 
                            target_date = max(cases$date),
                            delay_defs = delay_defs,
                            incubation_defs = incubation_defs)
                            
                     
reported_cases <- report_cases(nowcast, delay_defs = delay_defs,
                               incubation_defs = incubation_defs)
                               
print(reported_cases)
}
