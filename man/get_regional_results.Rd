% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get.R
\name{get_regional_results}
\alias{get_regional_results}
\title{Get Combined Regional Results}
\usage{
get_regional_results(
  regional_output,
  results_dir,
  date,
  samples = TRUE,
  forecast = FALSE
)
}
\arguments{
\item{regional_output}{A list of output as produced by \code{regional_epinow} and
stored in the \code{regional} list.}

\item{results_dir}{A character string indicating the folder containing the
\code{EpiNow2} results to extract.}

\item{date}{A Character string (in the format "yyyy-mm-dd") indicating the
date to extract data for. Defaults to "latest" which finds the latest
results available.}

\item{samples}{Logical, defaults to \code{TRUE}. Should samples be returned.}

\item{forecast}{Logical, defaults to \code{FALSE}. Should forecast results be
returned.}
}
\value{
A list of estimates, forecasts and estimated cases by date of report.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}
Summarises results across regions either from input or from disk. See the
examples for details.
}
\examples{
\donttest{
# construct example distributions
generation_time <- get_generation_time(
 disease = "SARS-CoV-2", source = "ganyani"
)
incubation_period <- get_incubation_period(
 disease = "SARS-CoV-2", source = "lauer"
)
reporting_delay <- estimate_delay(rlnorm(100, log(6), 1), max_value = 10)

# example case vector
cases <- example_confirmed[1:30]
cases <- data.table::rbindlist(list(
  data.table::copy(cases)[, region := "testland"],
  cases[, region := "realland"]
))

# save results to tmp folder
dir <- file.path(tempdir(check = TRUE), "results")
# run multiregion estimates
regional_out <- regional_epinow(
  reported_cases = cases,
  generation_time = generation_time_opts(generation_time),
  delays = delay_opts(incubation_period + reporting_delay),
  rt = rt_opts(rw = 7), gp = NULL,
  output = c("regions", "latest"),
  target_folder = dir,
  return_output = TRUE
)
# from output
results <- get_regional_results(regional_out$regional, samples = FALSE)
names(results)

# from a folder
folder_results <- get_regional_results(results_dir = dir, samples = FALSE)
names(folder_results)
}
}
\author{
Sam Abbott
}
